/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.CarFleet;
import model.Car;
/**
 *
 * @author nidhitiwari
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    CarFleet carFleetDetails;
    public ViewJPanel(CarFleet carFleetDetails) {
        initComponents();
        
        this.carFleetDetails = carFleetDetails;
        
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblViewCarDetails = new javax.swing.JTable();
        btnViewCarDetails = new javax.swing.JButton();
        btnDeleteCarDetails = new javax.swing.JButton();
        btnAllAvailableCars = new javax.swing.JButton();
        btnFirstAvailableCar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        lblSeatCapacity = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        lblUsedBy = new javax.swing.JLabel();
        txtMaintenanceCertExpDate = new javax.swing.JTextField();
        lblLastUpdated = new javax.swing.JLabel();
        txtModelNum = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtSerialNum = new javax.swing.JTextField();
        chkboxAvailable = new java.awt.Checkbox();
        lblCarModelNum = new javax.swing.JLabel();
        txtManufacturer = new javax.swing.JTextField();
        lblCarSerialNum = new javax.swing.JLabel();
        txtManufacturedDate = new javax.swing.JTextField();
        lblCarManufacturer = new javax.swing.JLabel();
        txtSeatCapacity = new javax.swing.JTextField();
        txtLastUpdated = new javax.swing.JTextField();
        lblCity = new javax.swing.JLabel();
        lblMaintenanceCertExpDate = new javax.swing.JLabel();
        lblManufacturedDate = new javax.swing.JLabel();
        txtUsedBy = new javax.swing.JTextField();
        jInternalFrame4 = new javax.swing.JInternalFrame();
        btnSerialNumberFilter = new javax.swing.JButton();
        lblSerialNumberFilter = new javax.swing.JLabel();
        txtSerialNumberFilter = new javax.swing.JTextField();
        jInternalFrame5 = new javax.swing.JInternalFrame();
        btnModelNumberFilter = new javax.swing.JButton();
        lblModelNumberFilter = new javax.swing.JLabel();
        txtModelNumberFilter = new javax.swing.JTextField();
        jInternalFrame6 = new javax.swing.JInternalFrame();
        btnCityFilter = new javax.swing.JButton();
        lblCityFilter = new javax.swing.JLabel();
        txtCityFilter = new javax.swing.JTextField();
        jInternalFrame2 = new javax.swing.JInternalFrame();
        btnManufacturedDateFilter = new javax.swing.JButton();
        lblManufacturedYearFilter = new javax.swing.JLabel();
        txtManufacturedDateFilter = new javax.swing.JTextField();
        jInternalFrame3 = new javax.swing.JInternalFrame();
        lblManufacturedYearFilter1 = new javax.swing.JLabel();
        comboBoxMinCapacity = new javax.swing.JComboBox<>();
        comboBoxMaximumCapacity = new javax.swing.JComboBox<>();
        lblMinSeat = new javax.swing.JLabel();
        lblMaxSeat = new javax.swing.JLabel();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        txtCountUnAvlCars = new javax.swing.JTextField();
        btnCarAvailabilityStatus = new javax.swing.JButton();
        lblCountAvlCars = new javax.swing.JLabel();
        txtCountAvlCars = new javax.swing.JTextField();
        lblCountUnAvlCars = new javax.swing.JLabel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        comboBoxCarManufacturer = new javax.swing.JComboBox<>();
        lblManufacturerFilter = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblUsedByApp = new javax.swing.JLabel();
        comboBoxUsedByApp = new javax.swing.JComboBox<>();
        lblLastUpdatedValue = new javax.swing.JLabel();
        txtLastUpdatedValue = new javax.swing.JTextField();
        btnExpiredMaintCert = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setText("View Car Details");

        tblViewCarDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Model Number", "Serial Number", "Manufacturer", "Manufactured Date", "Seat Capacity", "Is Available"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblViewCarDetails);

        btnViewCarDetails.setText("View");
        btnViewCarDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewCarDetailsActionPerformed(evt);
            }
        });

        btnDeleteCarDetails.setText("Delete");
        btnDeleteCarDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCarDetailsActionPerformed(evt);
            }
        });

        btnAllAvailableCars.setText("All Available Cars");
        btnAllAvailableCars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAllAvailableCarsActionPerformed(evt);
            }
        });

        btnFirstAvailableCar.setText("First Available Car");
        btnFirstAvailableCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstAvailableCarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 483, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        lblSeatCapacity.setText("Seat Capacity:");

        lblUsedBy.setText("Used By App:");

        lblLastUpdated.setText("Last Updated:");

        txtModelNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtModelNumActionPerformed(evt);
            }
        });

        jLabel2.setText("Is Available:");

        chkboxAvailable.setLabel("Is Available");

        lblCarModelNum.setText("Model Number:");

        lblCarSerialNum.setText("Serial Number:");

        lblCarManufacturer.setText("Manufacturer:");

        lblCity.setText("City:");

        lblMaintenanceCertExpDate.setText("Maintenance Certificate Expire Date:");

        lblManufacturedDate.setText("Manufactured Date:");

        jInternalFrame4.setVisible(true);

        btnSerialNumberFilter.setText("Filter Serial Number");
        btnSerialNumberFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSerialNumberFilterActionPerformed(evt);
            }
        });

        lblSerialNumberFilter.setText("Serial Number");

        javax.swing.GroupLayout jInternalFrame4Layout = new javax.swing.GroupLayout(jInternalFrame4.getContentPane());
        jInternalFrame4.getContentPane().setLayout(jInternalFrame4Layout);
        jInternalFrame4Layout.setHorizontalGroup(
            jInternalFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSerialNumberFilter)
                    .addGroup(jInternalFrame4Layout.createSequentialGroup()
                        .addComponent(txtSerialNumberFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSerialNumberFilter)))
                .addContainerGap())
        );
        jInternalFrame4Layout.setVerticalGroup(
            jInternalFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSerialNumberFilter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSerialNumberFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSerialNumberFilter))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jInternalFrame5.setVisible(true);

        btnModelNumberFilter.setText("Filter Model Number");
        btnModelNumberFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModelNumberFilterActionPerformed(evt);
            }
        });

        lblModelNumberFilter.setText("Model Number");

        javax.swing.GroupLayout jInternalFrame5Layout = new javax.swing.GroupLayout(jInternalFrame5.getContentPane());
        jInternalFrame5.getContentPane().setLayout(jInternalFrame5Layout);
        jInternalFrame5Layout.setHorizontalGroup(
            jInternalFrame5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblModelNumberFilter)
                    .addGroup(jInternalFrame5Layout.createSequentialGroup()
                        .addComponent(txtModelNumberFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModelNumberFilter)))
                .addContainerGap())
        );
        jInternalFrame5Layout.setVerticalGroup(
            jInternalFrame5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblModelNumberFilter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrame5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtModelNumberFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnModelNumberFilter))
                .addContainerGap(85, Short.MAX_VALUE))
        );

        jInternalFrame6.setVisible(true);

        btnCityFilter.setText("Filter City");
        btnCityFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCityFilterActionPerformed(evt);
            }
        });

        lblCityFilter.setText("City Filter");

        javax.swing.GroupLayout jInternalFrame6Layout = new javax.swing.GroupLayout(jInternalFrame6.getContentPane());
        jInternalFrame6.getContentPane().setLayout(jInternalFrame6Layout);
        jInternalFrame6Layout.setHorizontalGroup(
            jInternalFrame6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCityFilter)
                    .addGroup(jInternalFrame6Layout.createSequentialGroup()
                        .addComponent(txtCityFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCityFilter)))
                .addContainerGap())
        );
        jInternalFrame6Layout.setVerticalGroup(
            jInternalFrame6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCityFilter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrame6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCityFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCityFilter))
                .addContainerGap(159, Short.MAX_VALUE))
        );

        jLayeredPane1.setLayer(lblSeatCapacity, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtCity, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblUsedBy, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtMaintenanceCertExpDate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblLastUpdated, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtModelNum, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtSerialNum, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(chkboxAvailable, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblCarModelNum, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtManufacturer, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblCarSerialNum, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtManufacturedDate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblCarManufacturer, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtSeatCapacity, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtLastUpdated, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblCity, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblMaintenanceCertExpDate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblManufacturedDate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtUsedBy, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jInternalFrame4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jInternalFrame5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jInternalFrame6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblMaintenanceCertExpDate)
                        .addComponent(lblCity)
                        .addComponent(lblUsedBy)
                        .addComponent(lblSeatCapacity)
                        .addComponent(lblManufacturedDate)
                        .addComponent(lblCarManufacturer)
                        .addComponent(lblCarSerialNum)
                        .addComponent(lblCarModelNum))
                    .addComponent(lblLastUpdated, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(34, 34, 34)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtManufacturedDate, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtModelNum, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSerialNum, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                    .addComponent(txtManufacturer)
                    .addComponent(txtLastUpdated, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkboxAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaintenanceCertExpDate, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUsedBy, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSeatCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jInternalFrame4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jInternalFrame5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(jInternalFrame6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))))
        );

        jLayeredPane1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtCity, txtLastUpdated, txtMaintenanceCertExpDate, txtManufacturedDate, txtManufacturer, txtModelNum, txtSeatCapacity, txtSerialNum, txtUsedBy});

        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCarModelNum)
                            .addComponent(txtModelNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCarSerialNum)
                            .addComponent(txtSerialNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCarManufacturer)
                            .addComponent(txtManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jInternalFrame4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblManufacturedDate)
                            .addComponent(txtManufacturedDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSeatCapacity)
                            .addComponent(txtSeatCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUsedBy)
                            .addComponent(txtUsedBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCity))
                        .addGap(6, 6, 6)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaintenanceCertExpDate)
                            .addComponent(txtMaintenanceCertExpDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jInternalFrame5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLastUpdated, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLastUpdated))
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(chkboxAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jInternalFrame6)
                        .addContainerGap())))
        );

        jLayeredPane1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtCity, txtLastUpdated, txtMaintenanceCertExpDate, txtManufacturedDate, txtManufacturer, txtModelNum, txtSeatCapacity, txtSerialNum, txtUsedBy});

        jInternalFrame2.setVisible(true);

        btnManufacturedDateFilter.setText("Filter Manufactured Year");
        btnManufacturedDateFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManufacturedDateFilterActionPerformed(evt);
            }
        });

        lblManufacturedYearFilter.setText("Manufactured Year");

        javax.swing.GroupLayout jInternalFrame2Layout = new javax.swing.GroupLayout(jInternalFrame2.getContentPane());
        jInternalFrame2.getContentPane().setLayout(jInternalFrame2Layout);
        jInternalFrame2Layout.setHorizontalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblManufacturedYearFilter)
                    .addGroup(jInternalFrame2Layout.createSequentialGroup()
                        .addComponent(txtManufacturedDateFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnManufacturedDateFilter)))
                .addContainerGap())
        );
        jInternalFrame2Layout.setVerticalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblManufacturedYearFilter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtManufacturedDateFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnManufacturedDateFilter))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jInternalFrame3.setVisible(true);

        lblManufacturedYearFilter1.setText("Seat Capacity");

        comboBoxMinCapacity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        comboBoxMinCapacity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxMinCapacityActionPerformed(evt);
            }
        });

        comboBoxMaximumCapacity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2", "3", "4", "5", "6", "7", "8", "9", "10", "11" }));
        comboBoxMaximumCapacity.setSelectedIndex(9);
        comboBoxMaximumCapacity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxMaximumCapacityActionPerformed(evt);
            }
        });

        lblMinSeat.setText("Min Seat");

        lblMaxSeat.setText("Max Seat");

        javax.swing.GroupLayout jInternalFrame3Layout = new javax.swing.GroupLayout(jInternalFrame3.getContentPane());
        jInternalFrame3.getContentPane().setLayout(jInternalFrame3Layout);
        jInternalFrame3Layout.setHorizontalGroup(
            jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame3Layout.createSequentialGroup()
                .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboBoxMinCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jInternalFrame3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblManufacturedYearFilter1)
                            .addComponent(lblMinSeat))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame3Layout.createSequentialGroup()
                        .addComponent(lblMaxSeat)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jInternalFrame3Layout.createSequentialGroup()
                        .addComponent(comboBoxMaximumCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 126, Short.MAX_VALUE))))
        );
        jInternalFrame3Layout.setVerticalGroup(
            jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblManufacturedYearFilter1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMinSeat)
                    .addComponent(lblMaxSeat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxMinCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxMaximumCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jInternalFrame1.setVisible(true);

        txtCountUnAvlCars.setText("0");

        btnCarAvailabilityStatus.setText("Car Availability Status");
        btnCarAvailabilityStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarAvailabilityStatusActionPerformed(evt);
            }
        });

        lblCountAvlCars.setText("Total Available Cars");

        txtCountAvlCars.setText("0");

        lblCountUnAvlCars.setText("Total Engaged Cars");

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCarAvailabilityStatus)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCountAvlCars, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCountAvlCars))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCountUnAvlCars, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCountUnAvlCars))))
                .addContainerGap())
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCarAvailabilityStatus)
                .addGap(5, 5, 5)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCountAvlCars)
                    .addComponent(lblCountUnAvlCars))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCountAvlCars, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCountUnAvlCars, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        comboBoxCarManufacturer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tesla", "BMW", "Honda", "GM", "Toyota", "Suzuki", "All" }));
        comboBoxCarManufacturer.setSelectedIndex(-1);
        comboBoxCarManufacturer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxCarManufacturerActionPerformed(evt);
            }
        });

        lblManufacturerFilter.setText("Manufacturer");

        jLayeredPane2.setLayer(comboBoxCarManufacturer, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(lblManufacturerFilter, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblManufacturerFilter))
                    .addComponent(comboBoxCarManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblManufacturerFilter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboBoxCarManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 97, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 61, Short.MAX_VALUE)
        );

        lblUsedByApp.setText("Used By App");

        comboBoxUsedByApp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Uber", "Lyft", "Ola", "All" }));
        comboBoxUsedByApp.setSelectedIndex(-1);
        comboBoxUsedByApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxUsedByAppActionPerformed(evt);
            }
        });

        lblLastUpdatedValue.setText("Last Updated");

        txtLastUpdatedValue.setText("                   ");
        txtLastUpdatedValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastUpdatedValueActionPerformed(evt);
            }
        });

        btnExpiredMaintCert.setText("List Expired Certificate");
        btnExpiredMaintCert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExpiredMaintCertActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(261, 261, 261)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnViewCarDetails)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnDeleteCarDetails)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnAllAvailableCars)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnFirstAvailableCar))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(15, 15, 15)
                                                .addComponent(btnExpiredMaintCert)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblUsedByApp)
                                            .addComponent(comboBoxUsedByApp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(30, 30, 30)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblLastUpdatedValue)
                                            .addComponent(txtLastUpdatedValue, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jInternalFrame3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jInternalFrame2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 552, Short.MAX_VALUE)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 815, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLayeredPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(6, 6, 6)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(lblUsedByApp)
                                                .addComponent(lblLastUpdatedValue))
                                            .addGap(2, 2, 2)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(comboBoxUsedByApp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtLastUpdatedValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(btnViewCarDetails)
                                            .addComponent(btnDeleteCarDetails)
                                            .addComponent(btnAllAvailableCars)
                                            .addComponent(btnFirstAvailableCar))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnExpiredMaintCert)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jInternalFrame3)
                                    .addComponent(jInternalFrame2)
                                    .addComponent(jInternalFrame1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLayeredPane1)))
                        .addGap(14, 14, 14))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtModelNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtModelNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtModelNumActionPerformed

    private void btnDeleteCarDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCarDetailsActionPerformed
        int selectedRowIndex = tblViewCarDetails.getSelectedRow();
        
        if(selectedRowIndex < 0) {  
            JOptionPane.showMessageDialog(this, "Please select a row to delete");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblViewCarDetails.getModel();
        Car selectedCar = (Car) model.getValueAt(selectedRowIndex, 0);
        
        carFleetDetails.removeCar(selectedCar);
        JOptionPane.showMessageDialog(this, "Car deleted");
        
        populateTable();
    }//GEN-LAST:event_btnDeleteCarDetailsActionPerformed

    private void btnViewCarDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewCarDetailsActionPerformed
        int selectedRowIndex = tblViewCarDetails.getSelectedRow();
        
        if(selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblViewCarDetails.getModel();
        Car selectedCar = (Car) model.getValueAt(selectedRowIndex, 0);
        
        txtModelNum.setText(String.valueOf(selectedCar.getModelNumber()));
        txtSerialNum.setText(String.valueOf(selectedCar.getSerialNumber()));
        txtManufacturer.setText(selectedCar.getManufacturer());
        txtManufacturedDate.setText(String.valueOf(selectedCar.getManufacturedDate()));
        txtSeatCapacity.setText(String.valueOf(selectedCar.getSeatCapacity()));
        txtUsedBy.setText(selectedCar.getUsedByApp());
        txtCity.setText(selectedCar.getCity());
        txtMaintenanceCertExpDate.setText(String.valueOf(selectedCar.getMaintenanceCertExpDate()));
        txtLastUpdated.setText(String.valueOf(selectedCar.getLastUpdated()));
        chkboxAvailable.setState(selectedCar.isIsAvailable());
    }//GEN-LAST:event_btnViewCarDetailsActionPerformed

    private void btnAllAvailableCarsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAllAvailableCarsActionPerformed

        String isAvailable = "true";
        populateTableAvailable(isAvailable);
        
    }//GEN-LAST:event_btnAllAvailableCarsActionPerformed

    private void comboBoxCarManufacturerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxCarManufacturerActionPerformed
        populateTable();
    }//GEN-LAST:event_comboBoxCarManufacturerActionPerformed

    private void btnFirstAvailableCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstAvailableCarActionPerformed
        String isAvailable = "true";
        populateTableFirstAvailable();
    }//GEN-LAST:event_btnFirstAvailableCarActionPerformed

    private void btnCarAvailabilityStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarAvailabilityStatusActionPerformed
        int totalCarAvl = 0;
        int countCarAvl = 0;
        int countUnAvlCar = 0;
        for(Car c: carFleetDetails.getCarFleetDetails()) {
                totalCarAvl++;    
            if (c.isIsAvailable() == true) {
                countCarAvl++;
            }
        }
        countUnAvlCar = totalCarAvl - countCarAvl;
        txtCountAvlCars.setText(String.valueOf(countCarAvl));
        txtCountUnAvlCars.setText(String.valueOf(countUnAvlCar));
    }//GEN-LAST:event_btnCarAvailabilityStatusActionPerformed

    private void btnManufacturedDateFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManufacturedDateFilterActionPerformed

        populateTableManufacturedYear();
    }//GEN-LAST:event_btnManufacturedDateFilterActionPerformed

    private void comboBoxMinCapacityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxMinCapacityActionPerformed

        Object countMinCapacity = comboBoxMinCapacity.getSelectedItem();
        int countMinCapacityInt = Integer.parseInt(countMinCapacity.toString());
        comboBoxMaximumCapacity.removeAllItems();
        for (int i=countMinCapacityInt; i<=10 ; i++) {
            String newcountMinCapacityInt = String.valueOf(i + 1);
            comboBoxMaximumCapacity.addItem(newcountMinCapacityInt);
        }
        populateSeatCapacityFilterTable();
    }//GEN-LAST:event_comboBoxMinCapacityActionPerformed

    private void comboBoxMaximumCapacityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxMaximumCapacityActionPerformed

        populateSeatCapacityFilterTable();
    }//GEN-LAST:event_comboBoxMaximumCapacityActionPerformed

    private void btnSerialNumberFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSerialNumberFilterActionPerformed
        populateTableSerialNumberFilter();
    }//GEN-LAST:event_btnSerialNumberFilterActionPerformed

    private void btnModelNumberFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModelNumberFilterActionPerformed
        populateTableModelNumberFilter();
    }//GEN-LAST:event_btnModelNumberFilterActionPerformed

    private void comboBoxUsedByAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxUsedByAppActionPerformed
        populateTableUsedByApp();
    }//GEN-LAST:event_comboBoxUsedByAppActionPerformed

    private void txtLastUpdatedValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastUpdatedValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastUpdatedValueActionPerformed

    private void btnCityFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCityFilterActionPerformed
        populateTableCityFilter();
    }//GEN-LAST:event_btnCityFilterActionPerformed

    private void btnExpiredMaintCertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExpiredMaintCertActionPerformed
        populateTableExpiredCertFilter();
    }//GEN-LAST:event_btnExpiredMaintCertActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAllAvailableCars;
    private javax.swing.JButton btnCarAvailabilityStatus;
    private javax.swing.JButton btnCityFilter;
    private javax.swing.JButton btnDeleteCarDetails;
    private javax.swing.JButton btnExpiredMaintCert;
    private javax.swing.JButton btnFirstAvailableCar;
    private javax.swing.JButton btnManufacturedDateFilter;
    private javax.swing.JButton btnModelNumberFilter;
    private javax.swing.JButton btnSerialNumberFilter;
    private javax.swing.JButton btnViewCarDetails;
    private java.awt.Checkbox chkboxAvailable;
    private javax.swing.JComboBox<String> comboBoxCarManufacturer;
    private javax.swing.JComboBox<String> comboBoxMaximumCapacity;
    private javax.swing.JComboBox<String> comboBoxMinCapacity;
    private javax.swing.JComboBox<String> comboBoxUsedByApp;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JInternalFrame jInternalFrame2;
    private javax.swing.JInternalFrame jInternalFrame3;
    private javax.swing.JInternalFrame jInternalFrame4;
    private javax.swing.JInternalFrame jInternalFrame5;
    private javax.swing.JInternalFrame jInternalFrame6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCarManufacturer;
    private javax.swing.JLabel lblCarModelNum;
    private javax.swing.JLabel lblCarSerialNum;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCityFilter;
    private javax.swing.JLabel lblCountAvlCars;
    private javax.swing.JLabel lblCountUnAvlCars;
    private javax.swing.JLabel lblLastUpdated;
    private javax.swing.JLabel lblLastUpdatedValue;
    private javax.swing.JLabel lblMaintenanceCertExpDate;
    private javax.swing.JLabel lblManufacturedDate;
    private javax.swing.JLabel lblManufacturedYearFilter;
    private javax.swing.JLabel lblManufacturedYearFilter1;
    private javax.swing.JLabel lblManufacturerFilter;
    private javax.swing.JLabel lblMaxSeat;
    private javax.swing.JLabel lblMinSeat;
    private javax.swing.JLabel lblModelNumberFilter;
    private javax.swing.JLabel lblSeatCapacity;
    private javax.swing.JLabel lblSerialNumberFilter;
    private javax.swing.JLabel lblUsedBy;
    private javax.swing.JLabel lblUsedByApp;
    private javax.swing.JTable tblViewCarDetails;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCityFilter;
    private javax.swing.JTextField txtCountAvlCars;
    private javax.swing.JTextField txtCountUnAvlCars;
    private javax.swing.JTextField txtLastUpdated;
    private javax.swing.JTextField txtLastUpdatedValue;
    private javax.swing.JTextField txtMaintenanceCertExpDate;
    private javax.swing.JTextField txtManufacturedDate;
    private javax.swing.JTextField txtManufacturedDateFilter;
    private javax.swing.JTextField txtManufacturer;
    private javax.swing.JTextField txtModelNum;
    private javax.swing.JTextField txtModelNumberFilter;
    private javax.swing.JTextField txtSeatCapacity;
    private javax.swing.JTextField txtSerialNum;
    private javax.swing.JTextField txtSerialNumberFilter;
    private javax.swing.JTextField txtUsedBy;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblViewCarDetails.getModel();
        model.setRowCount(0);
        
        Object selectedManufacturer = comboBoxCarManufacturer.getSelectedItem();
        ArrayList<LocalDate> allUpdates = new ArrayList<LocalDate>();
        
        for(Car c: carFleetDetails.getCarFleetDetails()) {
            if (selectedManufacturer != null && selectedManufacturer.equals(c.getManufacturer())) {
            Object [] row = new Object[6];
            row[0] = c;
            row[1] = c.getSerialNumber();
            row[2] = c.getManufacturer();
            row[3] = c.getManufacturedDate();
            row[4] = c.getSeatCapacity();
            row[5] = c.isIsAvailable();
            
            model.addRow(row); 
            } else if(selectedManufacturer == null || selectedManufacturer == "All") {
                Object [] row = new Object[6];
            row[0] = c;
            row[1] = c.getSerialNumber();
            row[2] = c.getManufacturer();
            row[3] = c.getManufacturedDate();
            row[4] = c.getSeatCapacity();
            row[5] = c.isIsAvailable();
            
            model.addRow(row); 
            }
        }
        for(Car c: carFleetDetails.getCarFleetDetails()) {
            allUpdates.add(c.getLastUpdated());
        }
        LocalDate maxDate = Collections.max(allUpdates);
        txtLastUpdatedValue.setText(String.valueOf(maxDate));
        
    }
    
    private void populateTableUsedByApp() {
        DefaultTableModel model = (DefaultTableModel) tblViewCarDetails.getModel();
        model.setRowCount(0);
        
        Object selectedUsedByApp = comboBoxUsedByApp.getSelectedItem();
        
        for(Car c: carFleetDetails.getCarFleetDetails()) {
            if (selectedUsedByApp != null && selectedUsedByApp.equals(c.getUsedByApp())) {
            Object [] row = new Object[6];
            row[0] = c;
            row[1] = c.getSerialNumber();
            row[2] = c.getManufacturer();
            row[3] = c.getManufacturedDate();
            row[4] = c.getSeatCapacity();
            row[5] = c.isIsAvailable();
            
            model.addRow(row); 
            } else if(selectedUsedByApp == null || selectedUsedByApp == "All") {
                Object [] row = new Object[6];
            row[0] = c;
            row[1] = c.getSerialNumber();
            row[2] = c.getManufacturer();
            row[3] = c.getManufacturedDate();
            row[4] = c.getSeatCapacity();
            row[5] = c.isIsAvailable();
            
            model.addRow(row); 
            }
        }
        
    }
    
    private void populateTableAvailable(String isAvailable) {
        DefaultTableModel model = (DefaultTableModel) tblViewCarDetails.getModel();
        model.setRowCount(0);
        
        for(Car c: carFleetDetails.getCarFleetDetails()) {
            
            if(c.isIsAvailable() == true) {
                Object [] row = new Object[6];
                row[0] = c;
                row[1] = c.getSerialNumber();
                row[2] = c.getManufacturer();
                row[3] = c.getManufacturedDate();
                row[4] = c.getSeatCapacity();
                row[5] = c.isIsAvailable();

                model.addRow(row);
            }
        }
        
    }
    
    private void populateTableFirstAvailable() {
        DefaultTableModel model = (DefaultTableModel) tblViewCarDetails.getModel();
        model.setRowCount(0);
        
        for(Car c: carFleetDetails.getCarFleetDetails()) {
            
            if(c.isIsAvailable() == true) {
                Object [] row = new Object[6];
                row[0] = c;
                row[1] = c.getSerialNumber();
                row[2] = c.getManufacturer();
                row[3] = c.getManufacturedDate();
                row[4] = c.getSeatCapacity();
                row[5] = c.isIsAvailable();
                
                if (model.getRowCount() == 0) {
                    model.addRow(row);
                }
            }
        }
        
    }

    private void populateTableManufacturedYear() {
        DefaultTableModel model = (DefaultTableModel) tblViewCarDetails.getModel();
        model.setRowCount(0);
        int manufacturedYear = Integer.parseInt(txtManufacturedDateFilter.getText());
        
        for(Car c: carFleetDetails.getCarFleetDetails()) {
            int manuYear = c.getManufacturedDate().getYear();
            
            if(manuYear == manufacturedYear) {
                Object [] row = new Object[6];
                row[0] = c;
                row[1] = c.getSerialNumber();
                row[2] = c.getManufacturer();
                row[3] = c.getManufacturedDate();
                row[4] = c.getSeatCapacity();
                row[5] = c.isIsAvailable();

                model.addRow(row);
            }
        }
    }

    private void populateSeatCapacityFilterTable() {
        DefaultTableModel model = (DefaultTableModel) tblViewCarDetails.getModel();
        model.setRowCount(0);
        
        Object selectedMinCapacity = comboBoxMinCapacity.getSelectedItem();
        Object selectedMaxCapacity = comboBoxMaximumCapacity.getSelectedItem();
        
        for(Car c: carFleetDetails.getCarFleetDetails()) {
            int countMinCapacityInt = Integer.parseInt(selectedMinCapacity.toString());
            int countMaxCapacityInt = 11;
            if(comboBoxMaximumCapacity.getSelectedItem() != null) {
               countMaxCapacityInt = Integer.parseInt(selectedMaxCapacity.toString()); 
            }
            if (c.getSeatCapacity() <= countMaxCapacityInt && c.getSeatCapacity() >= countMinCapacityInt) {
            Object [] row = new Object[6];
            row[0] = c;
            row[1] = c.getSerialNumber();
            row[2] = c.getManufacturer();
            row[3] = c.getManufacturedDate();
            row[4] = c.getSeatCapacity();
            row[5] = c.isIsAvailable();
            
            model.addRow(row); 
            } 
        }
        
    }

    private void populateTableSerialNumberFilter() {
        DefaultTableModel model = (DefaultTableModel) tblViewCarDetails.getModel();
        model.setRowCount(0);
        int serialNumber = Integer.parseInt(txtSerialNumberFilter.getText());
        
        for(Car c: carFleetDetails.getCarFleetDetails()) {
            int seriNum = c.getSerialNumber();
            
            if(seriNum == serialNumber) {
                Object [] row = new Object[6];
                row[0] = c;
                row[1] = c.getSerialNumber();
                row[2] = c.getManufacturer();
                row[3] = c.getManufacturedDate();
                row[4] = c.getSeatCapacity();
                row[5] = c.isIsAvailable();

                model.addRow(row);
            }
        }
    }
    
    private void populateTableModelNumberFilter() {
        DefaultTableModel model = (DefaultTableModel) tblViewCarDetails.getModel();
        model.setRowCount(0);
        int modelNumber = Integer.parseInt(txtModelNumberFilter.getText());
        
        for(Car c: carFleetDetails.getCarFleetDetails()) {
            int modelNum = c.getModelNumber();
            
            if(modelNum == modelNumber) {
                Object [] row = new Object[6];
                row[0] = c;
                row[1] = c.getSerialNumber();
                row[2] = c.getManufacturer();
                row[3] = c.getManufacturedDate();
                row[4] = c.getSeatCapacity();
                row[5] = c.isIsAvailable();

                model.addRow(row);
            }
        }
    }

    private void populateTableCityFilter() {
        DefaultTableModel model = (DefaultTableModel) tblViewCarDetails.getModel();
        model.setRowCount(0);
        String typeCity = txtCityFilter.getText();
        
        for(Car c: carFleetDetails.getCarFleetDetails()) {
            String city = c.getCity();
            
            if(city == typeCity) {
                Object [] row = new Object[6];
                row[0] = c;
                row[1] = c.getSerialNumber();
                row[2] = c.getManufacturer();
                row[3] = c.getManufacturedDate();
                row[4] = c.getSeatCapacity();
                row[5] = c.isIsAvailable();

                model.addRow(row);
            }
        }
    }

    private void populateTableExpiredCertFilter() {
        DefaultTableModel model = (DefaultTableModel) tblViewCarDetails.getModel();
        model.setRowCount(0);
        LocalDate lt = LocalDate.now();
        
        for(Car c: carFleetDetails.getCarFleetDetails()) {
            LocalDate expiry = c.getMaintenanceCertExpDate();
            
            if(expiry.isBefore(lt)) {
                Object [] row = new Object[6];
                row[0] = c;
                row[1] = c.getSerialNumber();
                row[2] = c.getManufacturer();
                row[3] = c.getManufacturedDate();
                row[4] = c.getSeatCapacity();
                row[5] = c.isIsAvailable();

                model.addRow(row);
            }
        }
    }
}
